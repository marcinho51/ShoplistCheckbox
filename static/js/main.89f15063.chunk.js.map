{"version":3,"sources":["images/img1.jpg","components/NewRecipe/NewRecipe.js","components/Recipe/Recipe.js","components/YourRecipes/YourRecipes.js","components/NewProduct/NewProduct.js","components/Product/Product.js","components/YourProducts/YourProducts.js","components/Main/Main.js","components/Hello/Hello.js","components/NewShoplist/NewShoplist.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NewRecipe","className","type","name","value","this","props","onChange","nameOfTheRecipe","placeholder","ingredient1","product","ingredientOfTheRecipe","quantity","quantityOfTheIngredient","typeOfQuantity","typeOfQuantityOfTheIngredient","category","categoryOfTheIngredient","ingredient2","ingredient3","ingredient4","ingredient5","onClick","addRecipeToLocalStorage","Component","Recipe","state","remove","ingredients","showIngredients","setState","ingredientsShow","recipeAdd","id","addRecipeToShoplist","removeRecipeFromLocalStorage","recipeRemove","removeRecipeFromShoplist","YourRecipes","products","recipesFromLocalStorage","JSON","parse","localStorage","getItem","event","target","arr2","filter","item","setItem","stringify","recipes","recipe","length","undefined","push","map","key","NewProduct","nameOfTheProduct","newProduct","select","productsCategory","addProductToLocalStorage","Product","input","handleChangeQuantity","handleSelectQuantity","form","e","addProductToShoplist","deleteProductFromLocalStorage","chosen","removeProductFromShoplist","YourProducts","categories","arrayOfProducts","arr","productsFromLocalStorage","index","indexOf","splice","removeItem","index2","all","el","Main","to","Hello","user","nameOfUser","userToLocalStorage","userFromLocalStorage","firstEntry","secondEntry","NewShoplist","deleteItemFromShoppinglist","checked","listOfProducts","repeat","updatedListOfProducts","sorted","sort","a","b","categoryA","categoryB","localeCompare","shoppingList","finishedShoppingList","src","require","alt","App","forEach","element","console","log","sum","reduce","parseFloat","filteredListOfProducts","filtered","arrayOfIngredients","ingredient","result","findIndex","item2","result2","result3","result4","concat","i","j","exact","path","render","routeProps","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89f15063.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.6e351861.jpg\";","import React, { Component } from \"react\";\nimport \"./NewRecipe.scss\";\n\nclass NewRecipe extends Component {\n  render() {\n    return (\n      <div className=\"newRecipe col-6\">\n        <h2>Name of the recipe:</h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={this.props.name}\n          onChange={this.props.nameOfTheRecipe}\n          placeholder=\"Enter the name of the recipe\"\n        />\n\n        <table>\n          <tbody>\n            <tr>\n              <td className=\"ingredientsName\">\n                <input\n                  name=\"ingredient1\"\n                  placeholder=\"Enter ingredient's name\"\n                  type=\"text\"\n                  value={this.props.ingredient1.product}\n                  onChange={this.props.ingredientOfTheRecipe}\n                />\n              </td>\n              <td className=\"ingredientsQuantity\">\n                <input\n                  name=\"ingredient1\"\n                  type=\"number\"\n                  value={this.props.ingredient1.quantity}\n                  onChange={this.props.quantityOfTheIngredient}\n                />\n              </td>\n\n              <td className=\"ingredientsTypeOfQuantity\">\n                <select\n                  name=\"ingredient1\"\n                  value={this.props.ingredient1.typeOfQuantity}\n                  onChange={this.props.typeOfQuantityOfTheIngredient}\n                >\n                  <option>...</option>\n                  <option value=\"items\">items</option>\n                  <option value=\"kg\">weight [kg]</option>\n                </select>\n              </td>\n              <td className=\"ingredientsCategory\">\n                <select\n                  name=\"ingredient1\"\n                  value={this.props.ingredient1.category}\n                  onChange={this.props.categoryOfTheIngredient}\n                >\n                  <option>...</option>\n                  <option value=\"fruitsAndVegs\">Fruits and vegetables</option>\n                  <option value=\"looseProducts\">Loose products</option>\n                  <option value=\"forCakes\">For cakes</option>\n                  <option value=\"meat\">Meat</option>\n                  <option value=\"cannedGoods\">Canned goods</option>\n                  <option value=\"sweets\">Sweets</option>\n                  <option value=\"frozen\">Frozen</option>\n                  <option value=\"bread\">Bread</option>\n                  <option value=\"dairy\">Dairy</option>\n                  <option value=\"spices\">Spices</option>\n                  <option value=\"beverages\">Beverages</option>\n                  <option value=\"fats\">Fats</option>\n                  <option value=\"cleaningStuff\">Cleaning stuff</option>\n                  <option value=\"forHome\">For home</option>\n                  <option value=\"cosmetics\">Cosmetics</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"ingredientsName\">\n                <input\n                  type=\"text\"\n                  name=\"ingredient2\"\n                  placeholder=\"Enter ingredient's name\"\n                  value={this.props.ingredient2.product}\n                  onChange={this.props.ingredientOfTheRecipe}\n                />\n              </td>\n              <td className=\"ingredientsQuantity\">\n                <input\n                  name=\"ingredient2\"\n                  type=\"number\"\n                  value={this.props.ingredient2.quantity}\n                  onChange={this.props.quantityOfTheIngredient}\n                />\n              </td>\n\n              <td className=\"ingredientsTypeOfQuantity\">\n                <select\n                  name=\"ingredient2\"\n                  value={this.props.ingredient2.typeOfQuantity}\n                  onChange={this.props.typeOfQuantityOfTheIngredient}\n                >\n                  <option>...</option>\n                  <option value=\"items\">items</option>\n                  <option value=\"kg\">weight [kg]</option>\n                </select>\n              </td>\n              <td className=\"ingredientsCategory\">\n                <select\n                  name=\"ingredient2\"\n                  value={this.props.ingredient2.category}\n                  onChange={this.props.categoryOfTheIngredient}\n                >\n                  <option>...</option>\n                  <option value=\"fruitsAndVegs\">Fruits and vegetables</option>\n                  <option value=\"looseProducts\">Loose products</option>\n                  <option value=\"forCakes\">For cakes</option>\n                  <option value=\"meat\">Meat</option>\n                  <option value=\"cannedGoods\">Canned goods</option>\n                  <option value=\"sweets\">Sweets</option>\n                  <option value=\"frozen\">Frozen</option>\n                  <option value=\"bread\">Bread</option>\n                  <option value=\"dairy\">Dairy</option>\n                  <option value=\"spices\">Spices</option>\n                  <option value=\"beverages\">Beverages</option>\n                  <option value=\"fats\">Fats</option>\n                  <option value=\"cleaningStuff\">Cleaning stuff</option>\n                  <option value=\"forHome\">For home</option>\n                  <option value=\"cosmetics\">Cosmetics</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"ingredientsName\">\n                <input\n                  type=\"text\"\n                  name=\"ingredient3\"\n                  placeholder=\"Enter ingredient's name\"\n                  value={this.props.ingredient3.product}\n                  onChange={this.props.ingredientOfTheRecipe}\n                />\n              </td>\n              <td className=\"ingredientsQuantity\">\n                <input\n                  name=\"ingredient3\"\n                  type=\"number\"\n                  value={this.props.ingredient3.quantity}\n                  onChange={this.props.quantityOfTheIngredient}\n                />\n              </td>\n\n              <td className=\"ingredientsTypeOfQuantity\">\n                <select\n                  name=\"ingredient3\"\n                  value={this.props.ingredient3.typeOfQuantity}\n                  onChange={this.props.typeOfQuantityOfTheIngredient}\n                >\n                  <option>...</option>\n                  <option value=\"items\">items</option>\n                  <option value=\"kg\">weight [kg]</option>\n                </select>\n              </td>\n              <td className=\"ingredientsCategory\">\n                <select\n                  name=\"ingredient3\"\n                  value={this.props.ingredient3.category}\n                  onChange={this.props.categoryOfTheIngredient}\n                >\n                  <option>...</option>\n                  <option value=\"fruitsAndVegs\">Fruits and vegetables</option>\n                  <option value=\"looseProducts\">Loose products</option>\n                  <option value=\"forCakes\">For cakes</option>\n                  <option value=\"meat\">Meat</option>\n                  <option value=\"cannedGoods\">Canned goods</option>\n                  <option value=\"sweets\">Sweets</option>\n                  <option value=\"frozen\">Frozen</option>\n                  <option value=\"bread\">Bread</option>\n                  <option value=\"dairy\">Dairy</option>\n                  <option value=\"spices\">Spices</option>\n                  <option value=\"beverages\">Beverages</option>\n                  <option value=\"fats\">Fats</option>\n                  <option value=\"cleaningStuff\">Cleaning stuff</option>\n                  <option value=\"forHome\">For home</option>\n                  <option value=\"cosmetics\">Cosmetics</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"ingredientsName\">\n                <input\n                  type=\"text\"\n                  name=\"ingredient4\"\n                  placeholder=\"Enter ingredient's name\"\n                  value={this.props.ingredient4.product}\n                  onChange={this.props.ingredientOfTheRecipe}\n                />\n              </td>\n              <td className=\"ingredientsQuantity\">\n                <input\n                  name=\"ingredient4\"\n                  type=\"number\"\n                  value={this.props.ingredient4.quantity}\n                  onChange={this.props.quantityOfTheIngredient}\n                />\n              </td>\n\n              <td className=\"ingredientsTypeOfQuantity\">\n                <select\n                  name=\"ingredient4\"\n                  value={this.props.ingredient4.typeOfQuantity}\n                  onChange={this.props.typeOfQuantityOfTheIngredient}\n                >\n                  <option>...</option>\n                  <option value=\"items\">items</option>\n                  <option value=\"kg\">weight [kg]</option>\n                </select>\n              </td>\n              <td className=\"ingredientsCategory\">\n                <select\n                  name=\"ingredient4\"\n                  value={this.props.ingredient4.category}\n                  onChange={this.props.categoryOfTheIngredient}\n                >\n                  <option>...</option>\n                  <option value=\"fruitsAndVegs\">Fruits and vegetables</option>\n                  <option value=\"looseProducts\">Loose products</option>\n                  <option value=\"forCakes\">For cakes</option>\n                  <option value=\"meat\">Meat</option>\n                  <option value=\"cannedGoods\">Canned goods</option>\n                  <option value=\"sweets\">Sweets</option>\n                  <option value=\"frozen\">Frozen</option>\n                  <option value=\"bread\">Bread</option>\n                  <option value=\"dairy\">Dairy</option>\n                  <option value=\"spices\">Spices</option>\n                  <option value=\"beverages\">Beverages</option>\n                  <option value=\"fats\">Fats</option>\n                  <option value=\"cleaningStuff\">Cleaning stuff</option>\n                  <option value=\"forHome\">For home</option>\n                  <option value=\"cosmetics\">Cosmetics</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"ingredientsName\">\n                <input\n                  type=\"text\"\n                  name=\"ingredient5\"\n                  placeholder=\"Enter ingredient's name\"\n                  value={this.props.ingredient5.product}\n                  onChange={this.props.ingredientOfTheRecipe}\n                />\n              </td>\n              <td className=\"ingredientsQuantity\">\n                <input\n                  name=\"ingredient5\"\n                  type=\"number\"\n                  value={this.props.ingredient5.quantity}\n                  onChange={this.props.quantityOfTheIngredient}\n                />\n              </td>\n\n              <td className=\"ingredientsTypeOfQuantity\">\n                <select\n                  name=\"ingredient5\"\n                  value={this.props.ingredient5.typeOfQuantity}\n                  onChange={this.props.typeOfQuantityOfTheIngredient}\n                >\n                  <option>...</option>\n                  <option value=\"items\">items</option>\n                  <option value=\"kg\">weight [kg]</option>\n                </select>\n              </td>\n              <td className=\"ingredientsCategory\">\n                <select\n                  name=\"ingredient5\"\n                  value={this.props.ingredient5.category}\n                  onChange={this.props.categoryOfTheIngredient}\n                >\n                  <option>...</option>\n                  <option value=\"fruitsAndVegs\">Fruits and vegetables</option>\n                  <option value=\"looseProducts\">Loose products</option>\n                  <option value=\"forCakes\">For cakes</option>\n                  <option value=\"meat\">Meat</option>\n                  <option value=\"cannedGoods\">Canned goods</option>\n                  <option value=\"sweets\">Sweets</option>\n                  <option value=\"frozen\">Frozen</option>\n                  <option value=\"bread\">Bread</option>\n                  <option value=\"dairy\">Dairy</option>\n                  <option value=\"spices\">Spices</option>\n                  <option value=\"beverages\">Beverages</option>\n                  <option value=\"fats\">Fats</option>\n                  <option value=\"cleaningStuff\">Cleaning stuff</option>\n                  <option value=\"forHome\">For home</option>\n                  <option value=\"cosmetics\">Cosmetics</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <button onClick={this.props.addRecipeToLocalStorage}>\n                  Save your recipe\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default NewRecipe;\n","import React, { Component } from \"react\";\nimport \"./Recipe.scss\";\n\nclass Recipe extends Component {\n  state = {\n    remove: true,\n    ingredients: false\n  };\n\n  // show or hide ingredients\n  showIngredients = () => {\n    this.setState(state => ({\n      ingredients: !state.ingredients\n    }));\n  };\n\n  render() {\n    const ingredientsShow = (\n      <tr>\n        <td className=\"ingredientMain\">Ingredients:</td>\n        <td className=\"ingredient\">\n          {this.props.ingredient1.quantity}{\" \"}\n          {this.props.ingredient1.typeOfQuantity}{\" \"}\n          {this.props.ingredient1.product}\n        </td>\n        <td className=\"ingredient\">\n          {this.props.ingredient2.quantity}{\" \"}\n          {this.props.ingredient2.typeOfQuantity}{\" \"}\n          {this.props.ingredient2.product}\n        </td>\n\n        <td className=\"ingredient\">\n          {this.props.ingredient3.quantity}{\" \"}\n          {this.props.ingredient3.typeOfQuantity}{\" \"}\n          {this.props.ingredient3.product}\n        </td>\n\n        <td className=\"ingredient\">\n          {this.props.ingredient4.quantity}{\" \"}\n          {this.props.ingredient4.typeOfQuantity}{\" \"}\n          {this.props.ingredient4.product}\n        </td>\n\n        <td className=\"ingredient\">\n          {this.props.ingredient5.quantity}{\" \"}\n          {this.props.ingredient5.typeOfQuantity}{\" \"}\n          {this.props.ingredient5.product}\n        </td>\n      </tr>\n    );\n\n    const recipeAdd = (\n      <table>\n        <tbody>\n          <tr>\n            <td id=\"nameOfTheRecipe\">{this.props.name}</td>\n          </tr>\n          <tr className=\"showIngredients\">\n            <td>\n              <button onClick={this.showIngredients}>\n                {this.state.ingredients\n                  ? \"Hide ingredients\"\n                  : \"Show ingredients\"}\n              </button>\n            </td>\n            <td className=\"addRecipeToShoplistBtn\">\n              <button\n                onClick={() =>\n                  this.props.addRecipeToShoplist(\n                    this.props.ingredient1,\n                    this.props.ingredient2,\n                    this.props.ingredient3,\n                    this.props.ingredient4,\n                    this.props.ingredient5,\n                    this.setState(state => ({\n                      remove: !state.remove\n                    }))\n                  )\n                }\n              >\n                Add to shopping list\n              </button>\n            </td>\n\n            <td className=\"removeRecipeBtn\">\n              <button\n                onClick={() =>\n                  this.props.removeRecipeFromLocalStorage(this.props.name)\n                }\n              >\n                Remove from your recipes\n              </button>\n            </td>\n          </tr>\n          {this.state.ingredients ? ingredientsShow : null}\n        </tbody>\n      </table>\n    );\n\n    const recipeRemove = (\n      <table>\n        <tbody>\n          <tr>\n            <td id=\"nameOfTheRecipe\">{this.props.name}</td>\n          </tr>\n          <tr>\n            <td className=\"removeRecipeFromShoplistBtn\">\n              <button\n                onClick={() =>\n                  this.props.removeRecipeFromShoplist(\n                    this.props.ingredient1,\n                    this.props.ingredient2,\n                    this.props.ingredient3,\n                    this.props.ingredient4,\n                    this.props.ingredient5,\n                    this.setState(state => ({\n                      remove: !state.remove\n                    }))\n                  )\n                }\n              >\n                Remove from shopping list\n              </button>\n            </td>\n          </tr>\n          <tr>\n            <td className=\"ingredientMain\">Ingredients:</td>\n            <td className=\"ingredient\">\n              {this.props.ingredient1.quantity}{\" \"}\n              {this.props.ingredient1.typeOfQuantity}{\" \"}\n              {this.props.ingredient1.product}\n            </td>\n\n            <td className=\"ingredient\">\n              {this.props.ingredient2.quantity}{\" \"}\n              {this.props.ingredient2.typeOfQuantity}{\" \"}\n              {this.props.ingredient2.product}\n            </td>\n\n            <td className=\"ingredient\">\n              {this.props.ingredient3.quantity}{\" \"}\n              {this.props.ingredient3.typeOfQuantity}{\" \"}\n              {this.props.ingredient3.product}\n            </td>\n\n            <td className=\"ingredient\">\n              {this.props.ingredient4.quantity}{\" \"}\n              {this.props.ingredient4.typeOfQuantity}{\" \"}\n              {this.props.ingredient4.product}\n            </td>\n\n            <td className=\"ingredient\">\n              {this.props.ingredient5.quantity}{\" \"}\n              {this.props.ingredient5.typeOfQuantity}{\" \"}\n              {this.props.ingredient5.product}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n\n    return (\n      <div className=\"col-12\">\n        {this.state.remove ? recipeAdd : recipeRemove}\n      </div>\n    );\n  }\n}\n\nexport default Recipe;\n","import React, { Component } from \"react\";\nimport \"./YourRecipes.scss\";\nimport NewRecipe from \"../NewRecipe/NewRecipe\";\nimport Recipe from \"../Recipe/Recipe\";\n\nclass YourRecipes extends Component {\n  state = {\n    name: \"\",\n    ingredient1: {\n      product: \"\"\n    },\n    ingredient2: { product: \"\" },\n    ingredient3: { product: \"\" },\n    ingredient4: { product: \"\" },\n    ingredient5: { product: \"\" },\n    products: this.props.products,\n    recipesFromLocalStorage: JSON.parse(localStorage.getItem(\"recipes\"))\n  };\n\n  // name of the new recipe\n  nameOfTheRecipe = event => {\n    this.setState({\n      name: event.target.value\n    });\n  };\n\n  // ingredient of the new recipe\n  ingredientOfTheRecipe = event => {\n    this.setState({\n      [`${event.target.name}`]: {\n        ...this.state[event.target.name],\n        product: event.target.value\n      }\n    });\n  };\n\n  // quantity of the ingredient from the new recipe\n  quantityOfTheIngredient = event => {\n    this.setState({\n      [`${event.target.name}`]: {\n        ...this.state[event.target.name],\n        quantity: event.target.value\n      }\n    });\n  };\n\n  // type of quantity of the ingredient from the new recipe\n  typeOfQuantityOfTheIngredient = event => {\n    this.setState({\n      [event.target.name]: {\n        ...this.state[event.target.name],\n        typeOfQuantity: event.target.value\n      }\n    });\n  };\n\n  // category of the ingredient from the new recipe\n  categoryOfTheIngredient = event => {\n    this.setState({\n      [`${event.target.name}`]: {\n        ...this.state[event.target.name],\n        category: event.target.value\n      }\n    });\n  };\n\n  // remove recipe from local storage\n  removeRecipeFromLocalStorage = name => {\n    let arr = JSON.parse(localStorage.getItem(\"recipes\"));\n    let arr2 = arr.filter(item => item.name !== name);\n    localStorage.setItem(\"recipes\", JSON.stringify(arr2));\n\n    this.setState({\n      recipesFromLocalStorage: arr2\n    });\n  };\n\n  // add recipe to local storage\n  addRecipeToLocalStorage = () => {\n    let recipes = JSON.parse(localStorage.getItem(\"recipes\") || \"[]\");\n    let recipe = {\n      name: this.state.name,\n      ingredient1: {\n        product: this.state.ingredient1.product,\n        category: this.state.ingredient1.category,\n        quantity: this.state.ingredient1.quantity,\n        typeOfQuantity: this.state.ingredient1.typeOfQuantity\n      },\n      ingredient2: {\n        product: this.state.ingredient2.product,\n        category: this.state.ingredient2.category,\n        quantity: this.state.ingredient2.quantity,\n        typeOfQuantity: this.state.ingredient2.typeOfQuantity\n      },\n      ingredient3: {\n        product: this.state.ingredient3.product,\n        category: this.state.ingredient3.category,\n        quantity: this.state.ingredient3.quantity,\n        typeOfQuantity: this.state.ingredient4.typeOfQuantity\n      },\n      ingredient4: {\n        product: this.state.ingredient4.product,\n        category: this.state.ingredient4.category,\n        quantity: this.state.ingredient4.quantity,\n        typeOfQuantity: this.state.ingredient4.typeOfQuantity\n      },\n      ingredient5: {\n        product: this.state.ingredient5.product,\n        category: this.state.ingredient5.category,\n        quantity: this.state.ingredient5.quantity,\n        typeOfQuantity: this.state.ingredient5.typeOfQuantity\n      }\n    };\n    if (\n      this.state.name.length > 0 &&\n      this.state.ingredient1.product.length > 2 &&\n      this.state.ingredient1.quantity !== undefined &&\n      this.state.ingredient1.category !== undefined &&\n      this.state.ingredient1.typeOfQuantity !== undefined &&\n      this.state.ingredient2.product.length > 2 &&\n      this.state.ingredient2.quantity !== undefined &&\n      this.state.ingredient2.category !== undefined &&\n      this.state.ingredient2.typeOfQuantity !== undefined\n    ) {\n      recipes.push(recipe);\n      localStorage.setItem(\"recipes\", JSON.stringify(recipes));\n      this.setState({\n        name: \"\",\n        ingredient1: {\n          product: \"\",\n          category: \"\",\n          quantity: \"\",\n          typeOfQuantity: \"\"\n        },\n        ingredient2: {\n          product: \"\",\n          category: \"\",\n          quantity: \"\",\n          typeOfQuantity: \"\"\n        },\n        ingredient3: {\n          product: \"\",\n          category: \"\",\n          quantity: \"\",\n          typeOfQuantity: \"\"\n        },\n        ingredient4: {\n          product: \"\",\n          category: \"\",\n          quantity: \"\",\n          typeOfQuantity: \"\"\n        },\n        ingredient5: {\n          product: \"\",\n          category: \"\",\n          quantity: \"\",\n          typeOfQuantity: \"\"\n        }\n      });\n    } else {\n      this.setState({\n        name: \"Enter name of the recipe! \",\n        ingredient1: {\n          product: \"Enter at least 2 ingredients\"\n        }\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"yourRecipes col-6\">\n          <h1 id=\"yourRecipesHeadline\">Your Recipes</h1>\n          {localStorage.getItem(\"recipes\") ? (\n            <>\n              {JSON.parse(localStorage.getItem(\"recipes\")).map(item => (\n                <Recipe\n                  name={item.name}\n                  key={item.name}\n                  ingredient1={item.ingredient1}\n                  ingredient2={item.ingredient2}\n                  ingredient3={item.ingredient3}\n                  ingredient4={item.ingredient4}\n                  ingredient5={item.ingredient5}\n                  addRecipeToShoplist={this.props.addRecipeToShoplist}\n                  removeRecipeFromShoplist={this.props.removeRecipeFromShoplist}\n                  removeRecipeFromLocalStorage={\n                    this.removeRecipeFromLocalStorage\n                  }\n                />\n              ))}\n            </>\n          ) : null}\n\n          <h1 id=\"addNewRecipeHeadline\">Add new recipe</h1>\n          <NewRecipe\n            nameOfTheRecipe={this.nameOfTheRecipe}\n            ingredientOfTheRecipe={this.ingredientOfTheRecipe}\n            quantityOfTheIngredient={this.quantityOfTheIngredient}\n            typeOfQuantityOfTheIngredient={this.typeOfQuantityOfTheIngredient}\n            categoryOfTheIngredient={this.categoryOfTheIngredient}\n            ingredient1={this.state.ingredient1}\n            ingredient2={this.state.ingredient2}\n            ingredient3={this.state.ingredient3}\n            ingredient4={this.state.ingredient4}\n            ingredient5={this.state.ingredient5}\n            name={this.state.name}\n            addRecipeToLocalStorage={this.addRecipeToLocalStorage}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default YourRecipes;\n","import React, { Component } from \"react\";\nimport \"./NewProduct.scss\";\n\nclass NewProduct extends Component {\n  render() {\n    return (\n      <>\n        <tr className=\"newProduct\">\n          <td>\n            <input\n              type=\"text\"\n              onChange={this.props.nameOfTheProduct}\n              value={this.props.newProduct}\n              name=\"newProduct\"\n              placeholder=\"Enter new product's name\"\n            />\n\n            <select\n              value={this.props.select}\n              onChange={this.props.productsCategory}\n            >\n              <option>...</option>\n              <option value=\"fruitsAndVegs\">Fruits and vegetables</option>\n              <option value=\"looseProducts\">Loose products</option>\n              <option value=\"forCakes\">For cakes</option>\n              <option value=\"meat\">Meat</option>\n              <option value=\"cannedGoods\">Canned goods</option>\n              <option value=\"sweets\">Sweets</option>\n              <option value=\"frozen\">Frozen</option>\n              <option value=\"bread\">Bread</option>\n              <option value=\"dairy\">Dairy</option>\n              <option value=\"spices\">Spices</option>\n              <option value=\"beverages\">Beverages</option>\n              <option value=\"fats\">Fats</option>\n              <option value=\"cleaningStuff\">Cleaning stuff</option>\n              <option value=\"forHome\">For home</option>\n              <option value=\"cosmetics\">Cosmetics</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </td>\n        </tr>\n        <tr className=\"newProductBtn\">\n          <td>\n            <button onClick={this.props.addProductToLocalStorage}>Add</button>\n          </td>\n        </tr>\n      </>\n    );\n  }\n}\n\nexport default NewProduct;\n","import React, { Component } from \"react\";\nimport \"./Product.scss\";\n\nclass Product extends Component {\n  state = {\n    name: this.props.name,\n    category: this.props.category,\n    quantity: \"\",\n    typeOfQuantity: \"\",\n    input: true\n  };\n\n  // quantity of the product when adding to shopping list\n  handleChangeQuantity = event => {\n    this.setState({\n      quantity: event.target.value\n    });\n  };\n\n  // type of quantity of the product when adding to shopping list\n  handleSelectQuantity = event => {\n    this.setState({\n      typeOfQuantity: event.target.value\n    });\n  };\n\n  render() {\n    const form = (\n      <>\n        <tr key={this.props.name}>\n          <td className=\"nameOfProduct\">{this.props.name}</td>\n\n          <td className=\"numberOfProducts\">\n            <input\n              type=\"number\"\n              value={this.state.quantity}\n              onChange={this.handleChangeQuantity}\n            />\n          </td>\n          <td className=\"typeOfQuantity\">\n            <select\n              value={this.state.typeOfQuantity}\n              onChange={this.handleSelectQuantity}\n            >\n              <option>...</option>\n              <option value=\"items\">items</option>\n              <option value=\"kg\">weight [kg]</option>\n            </select>\n          </td>\n        </tr>\n        <tr>\n          <td className=\"addToYourShoplistBtn\">\n            <button\n              onClick={\n                this.state.quantity !== \"\" && this.state.typeOfQuantity !== \"\"\n                  ? e =>\n                      this.props.addProductToShoplist(\n                        this.state.name,\n                        this.state.category,\n                        this.state.quantity,\n                        this.state.typeOfQuantity,\n\n                        this.setState(state => ({\n                          input: !state.input\n                        }))\n                      )\n                  : null\n              }\n            >\n              Add to shopping list\n            </button>\n          </td>\n          <td></td>\n          <td className=\"removeFromYourProductsBtn\">\n            <button\n              onClick={() =>\n                this.props.deleteProductFromLocalStorage(\n                  this.state.category,\n                  this.state.name\n                )\n              }\n            >\n              Remove from your products\n            </button>\n          </td>\n        </tr>\n      </>\n    );\n\n    const chosen = (\n      <>\n        <tr key={this.props.name}>\n          <td className=\"nameOfProduct\">\n            {this.props.name} - {this.state.quantity}{\" \"}\n            {this.state.typeOfQuantity}\n          </td>\n\n          <td className=\"removeFromYourShoplistBtn\">\n            <button\n              onClick={e =>\n                this.setState(\n                  state => ({\n                    input: !state.input\n                  }),\n                  () => {\n                    this.props.removeProductFromShoplist(\n                      this.state.name,\n                      this.state.category,\n                      this.state.quantity,\n                      this.state.typeOfQuantity\n                    );\n                  }\n                )\n              }\n            >\n              Remove from shopping list\n            </button>\n          </td>\n        </tr>\n      </>\n    );\n\n    return this.state.input ? form : chosen;\n  }\n}\n\nexport default Product;\n","import React, { Component } from \"react\";\nimport \"./YourProducts.scss\";\nimport NewProduct from \"../NewProduct/NewProduct\";\nimport Product from \"../Product/Product\";\n\nclass YourProducts extends Component {\n  state = {\n    newProduct: \"\",\n    select: \"\",\n    products: this.props.products\n  };\n\n  // name of the new product\n  nameOfTheProduct = event => {\n    this.setState({\n      newProduct: event.target.value\n    });\n  };\n\n  // category of the new product\n  productsCategory = event => {\n    this.setState({\n      select: event.target.value\n    });\n  };\n\n  // all available categories\n  categories = [\n    \"fruitsAndVegs\",\n    \"looseProducts\",\n    \"forCakes\",\n    \"meat\",\n    \"cannedGoods\",\n    \"sweets\",\n    \"frozen\",\n    \"bread\",\n    \"diary\",\n    \"spices\",\n    \"beverages\",\n    \"fats\",\n    \"cleaningStuff\",\n    \"forHome\",\n    \"cosmetics\",\n    \"other\"\n  ];\n\n  arrayOfProducts = [];\n\n  // add product to local storage\n  addProductToLocalStorage = () => {\n    if (\n      (this.state.newProduct.length === 0 && this.state.select.length === 0) ||\n      (this.state.select.length === 0 && this.state.newProduct.length > 0) ||\n      (this.state.newProduct.length === 0 && this.state.select.length > 0)\n    ) {\n      this.setState({\n        newProduct: \"Enter the name and category!\"\n      });\n    } else if (\n      this.state.newProduct.length > 30 &&\n      this.state.newProduct.length > 0\n    ) {\n      this.setState({ newProduct: \"Too long name of the product!\" });\n    } else {\n      this.categories.map(item => {\n        if (this.state.select === item) {\n          let arr = [];\n          if (localStorage.getItem(item)) {\n            arr = JSON.parse(localStorage.getItem(item));\n          }\n          arr.push(this.state.newProduct);\n          localStorage.setItem(item, JSON.stringify(arr));\n        }\n      });\n\n      this.arrayOfProducts.push(this.state.newProduct);\n\n      localStorage.setItem(\n        \"productsFromLocalStorage\",\n        JSON.stringify(this.arrayOfProducts)\n      );\n\n      this.setState({\n        newProduct: \"\",\n        select: \"\",\n        productsFromLocalStorage: JSON.parse(\n          localStorage.getItem(\"productsFromLocalStorage\")\n        )\n      });\n    }\n  };\n\n  // delete product from local storage\n  deleteProductFromLocalStorage = (category, name) => {\n    let arr = JSON.parse(localStorage.getItem(category));\n    const index = arr.indexOf(name);\n    arr.splice(index, 1);\n    localStorage.setItem(category, JSON.stringify(arr));\n\n    if (localStorage.getItem(category).length === 2) {\n      localStorage.removeItem(category);\n    }\n\n    let arr2 = JSON.parse(localStorage.getItem(\"productsFromLocalStorage\"));\n    const index2 = arr2.indexOf(name);\n    arr2.splice(index2, 1);\n    this.setState({\n      productsFromLocalStorage: arr2\n    });\n\n    localStorage.setItem(\"productsFromLocalStorage\", JSON.stringify(arr2));\n  };\n\n  render() {\n    const all = this.categories.map(item =>\n      localStorage.getItem(item) ? (\n        <>\n          <h2>{item}</h2>\n          <table>\n            <tbody>\n              {JSON.parse(localStorage.getItem(item)).map(el => (\n                <Product\n                  addProductToShoplist={this.props.addProductToShoplist}\n                  category={item}\n                  deleteProductFromLocalStorage={\n                    this.deleteProductFromLocalStorage\n                  }\n                  name={el}\n                  key={el}\n                  removeProductFromShoplist={\n                    this.props.removeProductFromShoplist\n                  }\n                />\n              ))}\n            </tbody>\n          </table>\n        </>\n      ) : null\n    );\n\n    return (\n      <div className=\"yourProducts col-6\">\n        <h1>Your products</h1>\n        {all}\n        <table>\n          <tbody>\n            <NewProduct\n              nameOfTheProduct={this.nameOfTheProduct}\n              productsCategory={this.productsCategory}\n              newProduct={this.state.newProduct}\n              select={this.state.select}\n              addProductToLocalStorage={this.addProductToLocalStorage}\n            />\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default YourProducts;\n","import React, { Component } from \"react\";\nimport \"./Main.scss\";\nimport { Link } from \"react-router-dom\";\nimport YourRecipes from \"../YourRecipes/YourRecipes\";\nimport YourProducts from \"../YourProducts/YourProducts\";\n\nclass Main extends Component {\n  render() {\n    return (\n      <div className=\"wrapper2\">\n        <div className=\"row\">\n          <YourProducts\n            addProductToShoplist={this.props.addProductToShoplist}\n            products={this.props.products}\n            removeProductFromShoplist={this.props.removeProductFromShoplist}\n          />\n          <YourRecipes\n            addRecipeToShoplist={this.props.addRecipeToShoplist}\n            products={this.props.products}\n            removeRecipeFromShoplist={this.props.removeRecipeFromShoplist}\n          />\n        </div>\n        {this.props.products.length > 0 ? (\n          <div className=\"row\">\n            <div className=\"col-5\"></div>\n            <div className=\"col-2\">\n              <button id=\"createShopList\">\n                <Link to=\"/shoppinglist\">Create your shopping list!</Link>\n              </button>\n            </div>\n            <div className=\"col-6\"></div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport \"./Hello.scss\";\nimport { Link } from \"react-router-dom\";\n\nclass Hello extends Component {\n  state = {\n    user: \"\"\n  };\n\n  // name of user\n  nameOfUser = event => {\n    this.setState({\n      user: event.target.value\n    });\n  };\n\n  // saving name of user to local storage\n  userToLocalStorage = () => {\n    const { user } = this.state;\n    localStorage.setItem(\"user\", user);\n    this.setState({\n      user: \"\"\n    });\n  };\n\n  render() {\n    const userFromLocalStorage = localStorage.getItem(\"user\");\n\n    // first entry on the app\n    const firstEntry = (\n      <div className=\"first-entry\">\n        <h3>Hello,</h3>\n        <h5>it seems you're </h5>\n        <h5>the first time here!</h5>\n        <h5>Enter your name and we'll </h5>\n        <h5>organize this application for you!</h5>\n        <div className=\"inputs\">\n          <input\n            id=\"userName\"\n            type=\"text\"\n            placeholder=\"Enter your name \"\n            onChange={this.nameOfUser}\n            value={this.state.user}\n          />\n          <input\n            id=\"userNameButton\"\n            type=\"button\"\n            value=\"Gotowe!\"\n            onClick={this.userToLocalStorage}\n          />\n        </div>\n      </div>\n    );\n\n    // not-first entry on the app\n    const secondEntry = (\n      <div className=\"second-entry\">\n        <h1>Hello {userFromLocalStorage}!</h1>\n        <h5>Let's add your products and recipes...</h5>\n        <h5>... and create your shopping list :)</h5>\n        <button id=\"letsGo\">\n          <Link to=\"/productsandrecipes\">Let's go!</Link>\n        </button>\n      </div>\n    );\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            {userFromLocalStorage ? secondEntry : firstEntry}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hello;\n","import React, { Component } from \"react\";\nimport \"./NewShoplist.scss\";\n\nclass NewShoplist extends Component {\n  state = {\n    products: this.props.products\n  };\n\n  // remove product from shopping list\n  deleteItemFromShoppinglist = (event, name, typeOfQuantity) => {\n    if (event.target.checked) {\n      let listOfProducts = [...this.state.products];\n\n      let repeat = listOfProducts\n        .map(item => item.product + item.typeOfQuantity)\n        .indexOf(name + typeOfQuantity);\n\n      if (repeat === -1) {\n        let updatedListOfProducts = listOfProducts.filter(\n          item => item.product !== name\n        );\n\n        listOfProducts = updatedListOfProducts;\n      } else if (repeat !== -1) {\n        let updatedListOfProducts = listOfProducts.filter(\n          item =>\n            !(item.product === name && item.typeOfQuantity === typeOfQuantity)\n        );\n\n        listOfProducts = updatedListOfProducts;\n      }\n\n      this.setState({\n        products: listOfProducts\n      });\n    }\n  };\n\n  render() {\n    const sorted = [...this.state.products].sort((a, b) => {\n      let categoryA = a.category;\n      let categoryB = b.category;\n      return categoryA.localeCompare(categoryB);\n    });\n\n    const shoppingList = (\n      <div className=\"wrapper2\">\n        <div className=\"row\">\n          <div className=\"newShoplist col-12\">\n            <h1>Here's your shopping list:</h1>\n            <table>\n              <tbody>\n                {sorted.map((item, index) => {\n                  return (\n                    <tr key={index}>\n                      <td>\n                        <input\n                          onChange={event =>\n                            this.deleteItemFromShoppinglist(\n                              event,\n                              item.product,\n                              item.typeOfQuantity\n                            )\n                          }\n                          type=\"checkbox\"\n                          checked={false}\n                        />\n                      </td>\n                      <td> {item.product}</td>\n                      <td>{item.quantity}</td>\n                      <td>{item.typeOfQuantity}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n\n    const finishedShoppingList = (\n      <div className=\"wrapper2\">\n        <div className=\"row\">\n          <div className=\"newShoplist col-12\">\n            <h1>Shopping done, congratulations :)</h1>\n            <img src={require(\"../../images/img1.jpg\")} alt=\"Shopping done\" />\n          </div>\n        </div>\n      </div>\n    );\n\n    return sorted.length > 0 ? shoppingList : finishedShoppingList;\n  }\n}\n\nexport default NewShoplist;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Main from \"./components/Main/Main\";\nimport Hello from \"./components/Hello/Hello\";\n\nimport NewShoplist from \"./components/NewShoplist/NewShoplist\";\n\nclass App extends Component {\n  state = {\n    products: []\n  };\n\n  // adding recipe to shopping list\n  addRecipeToShoplist = (\n    ingredient1,\n    ingredient2,\n    ingredient3,\n    ingredient4,\n    ingredient5\n  ) => {\n    const ingredients = [\n      ingredient1,\n      ingredient2,\n      ingredient3,\n      ingredient4,\n      ingredient5\n    ];\n\n    let listOfProducts = [...this.state.products];\n\n    ingredients.forEach(element => {\n      let repeat = listOfProducts\n        .map(item => item.product + item.typeOfQuantity)\n        .indexOf(element.product + element.typeOfQuantity);\n\n      console.log(repeat);\n\n      if (repeat === -1 && element.product !== \"\") {\n        listOfProducts.push({\n          product: element.product,\n          category: element.category,\n          quantity: element.quantity,\n          typeOfQuantity: element.typeOfQuantity\n        });\n      } else if (repeat !== -1 && element.product !== \"\") {\n        listOfProducts.push({\n          product: element.product,\n          category: element.category,\n          quantity: element.quantity,\n          typeOfQuantity: element.typeOfQuantity\n        });\n\n        let filtered = listOfProducts.filter(\n          item =>\n            item.product === element.product &&\n            item.typeOfQuantity === element.typeOfQuantity\n        );\n\n        let sum = filtered.reduce(\n          (a, b) => parseFloat(a.quantity) + parseFloat(b.quantity)\n        );\n\n        let filteredListOfProducts = listOfProducts.filter(\n          item =>\n            !(\n              item.product === element.product &&\n              item.typeOfQuantity === element.typeOfQuantity\n            )\n        );\n\n        listOfProducts = filteredListOfProducts;\n\n        listOfProducts.push({\n          product: element.product,\n          category: element.category,\n          quantity: sum,\n          typeOfQuantity: element.typeOfQuantity\n        });\n      }\n\n      this.setState({\n        products: listOfProducts\n      });\n    });\n  };\n\n  // adding product to shopping list\n  addProductToShoplist = (name, category, quantity, typeOfQuantity) => {\n    let listOfProducts = [...this.state.products];\n\n    let repeat = listOfProducts\n      .map(item => item.product + item.typeOfQuantity)\n      .indexOf(name + typeOfQuantity);\n\n    console.log(repeat);\n\n    if (repeat === -1) {\n      listOfProducts.push({\n        product: name,\n        category: category,\n        quantity: quantity,\n        typeOfQuantity: typeOfQuantity\n      });\n    } else if (repeat !== -1) {\n      listOfProducts.push({\n        product: name,\n        category: category,\n        quantity: quantity,\n        typeOfQuantity: typeOfQuantity\n      });\n\n      let filtered = listOfProducts.filter(\n        item => item.product === name && item.typeOfQuantity === typeOfQuantity\n      );\n\n      let sum = filtered.reduce(\n        (a, b) => parseFloat(a.quantity) + parseFloat(b.quantity)\n      );\n\n      let filteredListOfProducts = listOfProducts.filter(\n        item =>\n          !(item.product === name && item.typeOfQuantity === typeOfQuantity)\n      );\n\n      listOfProducts = filteredListOfProducts;\n\n      listOfProducts.push({\n        product: name,\n        category: category,\n        quantity: sum,\n        typeOfQuantity: typeOfQuantity\n      });\n    }\n\n    this.setState({\n      products: listOfProducts\n    });\n  };\n\n  // removing product from shopping list\n  removeProductFromShoplist = (name, category, quantity, typeOfQuantity) => {\n    let listOfProducts = [...this.state.products];\n\n    let filtered = listOfProducts.filter(\n      item => item.product === name && item.typeOfQuantity === typeOfQuantity\n    );\n\n    if (parseFloat(filtered[0].quantity) === parseFloat(quantity)) {\n      let updatedListOfProducts = listOfProducts.filter(\n        item =>\n          !(item.product === name && item.typeOfQuantity === typeOfQuantity)\n      );\n\n      listOfProducts = updatedListOfProducts;\n    } else if (parseFloat(filtered[0].quantity) > parseFloat(quantity)) {\n      let updatedListOfProducts = listOfProducts.filter(\n        item =>\n          !(item.product === name && item.typeOfQuantity === typeOfQuantity)\n      );\n\n      listOfProducts = updatedListOfProducts;\n\n      listOfProducts.push({\n        product: name,\n        category: category,\n        quantity: parseFloat(filtered[0].quantity) - parseFloat(quantity),\n        typeOfQuantity: typeOfQuantity\n      });\n    }\n\n    this.setState({\n      products: listOfProducts\n    });\n  };\n\n  arrayOfIngredients = [];\n\n  // removing recipe from shopping list\n  removeRecipeFromShoplist = (\n    ingredient1,\n    ingredient2,\n    ingredient3,\n    ingredient4,\n    ingredient5\n  ) => {\n    let ingredients = [\n      ingredient1,\n      ingredient2,\n      ingredient3,\n      ingredient4,\n      ingredient5\n    ];\n    ingredients.forEach(ingredient => {\n      if (ingredient.product.length > 0) {\n        this.arrayOfIngredients.push({\n          product: ingredient.product,\n          category: ingredient.category,\n          quantity: ingredient.quantity,\n          typeOfQuantity: ingredient.typeOfQuantity\n        });\n      }\n    });\n\n    let listOfProducts = [...this.state.products];\n\n    const result = listOfProducts.filter(\n      item =>\n        this.arrayOfIngredients.findIndex(\n          item2 =>\n            item.product === item2.product &&\n            item.typeOfQuantity === item2.typeOfQuantity\n        ) === -1\n    );\n\n    const result2 = listOfProducts.filter(\n      item =>\n        this.arrayOfIngredients.findIndex(\n          item2 =>\n            item.product === item2.product &&\n            item.typeOfQuantity === item2.typeOfQuantity &&\n            item.quantity > item2.quantity\n        ) !== -1\n    );\n\n    const result3 = this.arrayOfIngredients.filter(\n      item =>\n        result2.findIndex(\n          item2 =>\n            item.product === item2.product &&\n            item.typeOfQuantity === item2.typeOfQuantity\n        ) !== -1\n    );\n\n    const result4 = result2.concat(result3);\n\n    for (var i = 0; i < result4.length - 1; i++) {\n      for (var j = i + 1; j < result4.length; j++) {\n        if (result4[i].product === result4[j].product) {\n          result.push({\n            product: result4[i].product,\n            category: result4[i].category,\n            quantity:\n              parseFloat(result4[i].quantity) - parseFloat(result4[j].quantity),\n            typeOfQuantity: result4[i].typeOfQuantity\n          });\n        }\n      }\n    }\n\n    this.setState({\n      products: result\n    });\n  };\n\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" render={routeProps => <Hello />} />\n          <Route\n            path=\"/productsandrecipes\"\n            render={routeProps => (\n              <Main\n                {...routeProps}\n                addProductToShoplist={this.addProductToShoplist}\n                removeProductFromShoplist={this.removeProductFromShoplist}\n                addRecipeToShoplist={this.addRecipeToShoplist}\n                products={this.state.products}\n                removeRecipeFromShoplist={this.removeRecipeFromShoplist}\n              />\n            )}\n          />\n          <Route\n            path=\"/shoppinglist\"\n            render={routeProps => (\n              <NewShoplist {...routeProps} products={this.state.products} />\n            )}\n          />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}